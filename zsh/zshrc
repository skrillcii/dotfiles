# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="gruvbox"
SOLARIZED_THEME="dark"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  sudo
  tmux
  timer
  extract
  docker
  docker-compose
  zsh-completions
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

###############################
# Common Environment Settings #
###############################

# Tmux settings
# Attach to an existing session or start new session otherwise
if [[ ! -n $TMUX ]]; then
    tmux -2 attach || tmux -2 new-session
fi

# Terminal color
export TERM=xterm-256color

# Standard encoding setting
export LANG=en_US.UTF-8
export LC_ALL=$LANG

# Japanese encoding setting
export LANG_JP=C.UTF-8
export LC_CTYPE=$LANG_JP

# Alawyas list directory after cd
case `uname` in
    Darwin)
        function chpwd() {ls -a}
    ;;
    Linux)
        function chpwd() {ls -a}
    ;;
esac

# Prompt to next line
prompt_end() {
    if [[ -n $CURRENT_BG ]]; then
        print -n "%{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR"
    else
        print -n "%{%k%}"
    fi
    print -n "%{%f%}"
    CURRENT_BG=''
    # Adds the new line and ➜ as the start character
    printf "\n ➜";
}

# Bat settings
export BAT_THEME="gruvbox-dark"

# Fzf settings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
export FZF_DEFAULT_COMMAND='find .'

# Autojump settings
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

# Oh-my-zsh timer settings
export TIMER_PRECISION=2 
export TIMER_FORMAT='[%d]'
export TIMER_THRESHOLD=0

# Oh-my-zsh completions settings
autoload -U compinit && compinit

# Setup default text editor
case `uname` in
    Darwin)
        if [[ -f /opt/homebrew/bin/vim ]]; then
            export EDITOR=/opt/homebrew/bin/vim
            alias vim='/opt/homebrew/bin/vim'
        fi
    ;;
    Linux)
        if [[ -f /usr/local/bin/vim ]]; then
            export EDITOR=/usr/local/bin/vim
            alias vim='/usr/local/bin/vim'
        else
            export EDITOR=/usr/bin/vim
            alias vim='/usr/bin/vim'
        fi
    ;;
esac

# Nvm settings
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Gvm settings
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# Pyenv settings
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/shims:$PATH"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi
export PYTHON_CONFIGURE_OPTS="--enable-shared"

# Pyenv-virtualenv auto-activation
# This automatically activates specified pyenv-virtualenv if a .python-version file exists
# This configuration is optional
# eval "$(pyenv virtualenv-init -)"

# Pretty print all environment variables
alias pe='env -0 | sort -z | tr "\0" "\n"'
# Pretty print path environment variable
alias pp='echo "${PATH//:/$'\\n'}"'
# Watch alias
alias wa='watch --color '
# Gdb alias
alias gdb='gdb -ex start'
# Apt update
alias aptu='sudo apt update'
# Apt upgrade
alias aptg='sudo apt upgrade'
# Apt install
alias apti='sudo apt install '
# Apt remove
alias aptr='sudo apt remove '
# Apt autoremove
alias apta='sudo apt autoremove '
# Apt show
alias apth='apt show '
# Apt search
alias apts='apt-cache search '
# Apt policy
alias aptp='apt-cache policy '

# Trash settings
alias rm='trash-put -v'
alias tl='trash-list'
alias ts='trash-restore'
alias te='trash-empty'

# Docker settings
# Docker show process status
alias dkp='sudo docker ps -a'
# Docker kill all running containers
alias dkk='sudo docker kill $(sudo docker ps -q)'
# Docker remove all stopped containers
alias dkr='sudo docker rm $(sudo docker ps -a -q)'
# Docker remove dangling containers
alias dkd='sudo docker rmi $(sudo docker images --filter "dangling=true" -q --no-trunc)'
# Docker show images
alias dki='sudo docker images'
# Docker show images (sorted by repository name)
alias dkis='sudo docker images | head -n1 ; sudo docker images | tail -n+2 | sort -h -k1'

# Git settings
# Git show status
alias gs='git status'
# Git list branch
alias gb='git branch --all'
# Git fetch remote
alias gf='git fetch --all --verbose'
# Git show graph
alias gg='git log --all --oneline --decorate --graph --color'
# Git show graph pretty
pretty=("%C(auto)%h%C(magenta) %cd %C(yellow)[%cr]%C(auto)%d%n"
        "%C(auto)%s%n %C(green)Committer:%cN <%cE>%n"
        "%C(blue)Author :%aN <%aE>%Creset")
function ggg() {
    git log --graph --all --date=local --pretty=format:"$pretty"
}
# Git prune local branch
function gu() {
    git fetch -p ; git branch -r | awk '{print $1}' \
        | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) \
        | awk '{print $1}' | xargs git branch -d
}

#################################
# Specific Environment Settings #
#################################

# Wally settings
# function wally() {~/dotfiles/zsa/wally}
# function wally-cli() {~/dotfiles/zsa/wally-cli}

# Terraform settings
# Terraform autocomplete
# autoload -U +X bashcompinit && bashcompinit
# complete -o nospace -C /opt/homebrew/Cellar/tfenv/2.2.3/versions/1.1.9/terraform terraform
# Terraform alias
# alias tf='tf'
